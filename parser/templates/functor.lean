/-!
  This file was automatically generated by the CatPrism toolchain.
  Source file: {source_file}
-/
import Core.Core -- Assumes core definitions are in `Core.Core`

open CatPrism.Core
open CategoryTheory

-- The user might need to define or import the concrete category types
-- (e.g., `CategoryA`, `CategoryB`) for this file to compile.
-- This template assumes they are available in the context.

namespace {namespace}

/--
An ε-functor automatically generated from the CatPrism DSL file.
It uses the refactored structure where the mapping data (`RawPrefunctor`)
is separated from the functoriality laws (`comp_ok`, `id_ok`).
-/
def {functor_name} : EpsFunctor (d := {metric}) {epsilon} where
  -- The RawPrefunctor field `F` contains the raw mapping data.
  F := {{
    obj := fun X => match X with
{object_map}
      -- A default case is added for robustness.
      -- This should be handled manually if a total mapping is required.
      | _ => sorry
    map := fun f => match f with
{morphism_map}
      -- A default case for morphisms.
      | _ => sorry
  }}
  -- The proof that composition is preserved up to ε.
  comp_ok := by
    {proof_block_comp}
  -- The proof that identity is preserved up to ε.
  id_ok := by
    {proof_block_id}

end {namespace}
